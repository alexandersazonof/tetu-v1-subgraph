
type ControllerEntity @entity {

  id: ID!

  VERSION: String!
  oldAddress: String!
  bookkeeper: BookkeeperEntity!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type BookkeeperEntity @entity {
  id: ID!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type VaultEntity @entity {

  id: ID!

  decimals: Int!
  name: String!
  symbol: String!

  active: Boolean!
  underlying: TokenEntity!

  lastShareTimestamp: BigInt!
  userUniqueCount: BigInt!
  userActiveCount: BigInt!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type StrategyEntity @entity {

  id: ID!

  platform: BigInt!
  poolId: String!
  name: String!
  strategies: [StrategyEntity!]!
  vault: VaultEntity!
  timestamp: BigInt!
  createAtBlock: BigInt!
}

type TokenEntity @entity {

  id: ID!

  decimals: Int!
  name: String!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type TvlEntity @entity(immutable: true) {

  id: ID!

  value: BigDecimal!
  price: BigInt!
  totalSupply: BigInt!

  vault: VaultEntity!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type SharePriceChangeLogEntity @entity(immutable: true) {

  id: ID!

  vault: VaultEntity!
  strategy: StrategyEntity!

  oldSharePrice: BigInt!
  newSharePrice: BigInt!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type ApyAutoCompoundEntity @entity(immutable: true) {

  id: ID!

  apy: BigDecimal!
  apr: BigDecimal!

  vault: VaultEntity!

  differentSharePrice: BigInt!
  differentShareTimestamp: BigInt!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type ApyRewardEntity @entity(immutable: true) {

  id: ID!

  apy: BigDecimal!
  apr: BigDecimal!

  vault: VaultEntity!

  rewardAmount: BigInt!
  rewardToken: String!
  rewardRate: BigInt!
  rewardPeriodFinish: BigInt!
  rewardTokenPrice: BigInt!

  tvl: TvlEntity!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type VaultUserEntity @entity {

  "vault-user"
  id: ID!

  vault: VaultEntity!
  user: String!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type VaultUniqueUserCountEntity @entity(immutable: true) {

  "vault-user-tx"
  id: ID!

  vault: VaultEntity!
  value: BigInt!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type VaultUniqueUserEntity @entity(immutable: true) {

  "vault-user"
  id: ID!

  vault: VaultEntity!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type VaultActiveUserCountEntity @entity(immutable: true) {

  "vault-user-tx"
  id: ID!

  vault: VaultEntity!
  value: BigInt!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type VaultActiveUserEntity @entity {

  "vault-user"
  id: ID!

  vault: VaultEntity!
  active: Boolean!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type StrategyEarnedEntity @entity {

  id: ID!

  vault: VaultEntity!
  strategy: StrategyEntity!
  amount: BigInt!
  tetuPrice: BigInt!

  timestamp: BigInt!
  createAtBlock: BigInt!
}

type UserEarnedEntity @entity {

  id: ID!

  user: String!
  vault: VaultEntity!
  token: TokenEntity!
  amount: BigInt!
  tokenPrice: BigInt!

  timestamp: BigInt!
  createAtBlock: BigInt!
}